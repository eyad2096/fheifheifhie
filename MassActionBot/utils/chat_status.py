from pyrogram import Client , enums
from functools import wraps
from pyrogram.types import Message
from MassActionBot import SUDOES



def handle_status(mystic):
    @wraps(mystic)
    async def wrapper(app : Client, message: Message):
        try:
            if message.chat.type == enums.ChatType.PRIVATE:
                await message.reply_text(" è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è ·¥ús·¥á ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös …™…¥ …¢ Ä·¥è·¥ú·¥òs/·¥Ñ ú·¥Ä…¥…¥·¥á üs …¥·¥è·¥õ …™…¥ ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á. ô·¥Ä·¥ã·¥Ä·¥Ä.....")
            chat_id = message.chat.id
            user_id = message.from_user.id
            BOT_ID = (await app.get_me()).id
            supreme_users = []
            async for m in app.get_chat_members(chat_id, filter=enums.ChatMembersFilter.ADMINISTRATORS):
                supreme_users.append(m.user.id)
            BOT = await app.get_chat_member(chat_id,BOT_ID)
            user = await app.get_chat_member(chat_id,user_id)       
            if BOT_ID not in supreme_users:
                return await message.reply_text("·¥°·¥õ“ì  ô Ä·¥ú ú …™'·¥ç …¥·¥è·¥õ ·¥á·¥†·¥á…¥ ·¥Ä·¥Ö·¥ç…™…¥  ú·¥è·¥° ·¥Ñ·¥Ä…¥ …™ ·¥ò·¥á Ä“ì·¥è Ä·¥ç ·¥õ ú·¥ás·¥á ·¥Ä·¥Ñ·¥õ…™·¥è…¥s üòí.")
            if (user_id not in supreme_users) and (user_id not in SUDOES):
                return await message.reply_text("“ì·¥ú·¥Ñ·¥ã  è·¥è·¥ú üñï.")
            if not BOT.privileges.can_restrict_members:
                return await message.reply_text("**…™ ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥á…¥·¥è·¥ú…¢ ú  Ä…™…¢ ú·¥õs  è·¥è·¥ú “ì·¥è·¥è ü. …¢…™·¥†·¥á ·¥ç·¥á ·¥õ ú·¥á  Ä·¥ás·¥õ Ä…™·¥Ñ·¥õ…™·¥è…¥  Ä…™…¢ ú·¥õ.**")
            if (user_id in supreme_users and not user.privileges.can_restrict_members) and user_id not in SUDOES :
                return await message.reply_text("` è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ús·¥á …™·¥õ.  è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á ·¥á…¥·¥è·¥ú…¢ ú  Ä…™…¢ ú·¥õs.`")
        except Exception as er :
            print(er)
    
        return await mystic(app, message)

    return wrapper       
             
         
       
     
